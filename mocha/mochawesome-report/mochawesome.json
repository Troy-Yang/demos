{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-15T15:08:09.581Z",
    "end": "2017-05-15T15:08:09.597Z",
    "duration": 16,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "test add",
        "suites": [],
        "tests": [
          {
            "title": "1 plus 1 should equal to 2",
            "fullTitle": "test add 1 plus 1 should equal to 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(1, 1)).to.be.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "b8530a4c-23b5-47de-a474-f1268c989e27",
            "parentUUID": "2bf4fb4c-6606-4f92-9175-ec660cd69084",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\add.test.js",
        "uuid": "2bf4fb4c-6606-4f92-9175-ec660cd69084",
        "failedHooks": [],
        "fullFile": "E:\\Git\\demos\\mocha\\test\\add.test.js",
        "passes": [
          {
            "title": "1 plus 1 should equal to 2",
            "fullTitle": "test add 1 plus 1 should equal to 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(1, 1)).to.be.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "b8530a4c-23b5-47de-a474-f1268c989e27",
            "parentUUID": "2bf4fb4c-6606-4f92-9175-ec660cd69084",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasFailedHooks": false,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1,
        "rootEmpty": false
      },
      {
        "title": "Difference types test",
        "suites": [],
        "tests": [
          {
            "title": "Difference types test",
            "fullTitle": "Difference types test Difference types test",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// 相等或不相等\nexpect(4 + 5).to.be.equal(9);\nexpect(4 + 5).to.be.not.equal(10);\n// expect(foo).to.be.deep.equal({ bar: 'baz' });\n// 布尔值为true\nexpect('everthing').to.be.ok;\nexpect(false).to.not.be.ok;\n// typeof\nexpect('test').to.be.a('string');\nexpect({ foo: 'bar' }).to.be.an('object');\n// expect(foo).to.be.an.instanceof(Foo);\n// include\nexpect([1, 2, 3]).to.include(2);\nexpect('foobar').to.contain('foo');\nexpect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n// empty\nexpect([]).to.be.empty;\nexpect('').to.be.empty;\nexpect({}).to.be.empty;\n// match\nexpect('foobar').to.match(/^foo/);",
            "err": {},
            "isRoot": false,
            "uuid": "1af08ab0-ca0a-47aa-a476-785518911302",
            "parentUUID": "b950b843-2849-402a-b06c-fafb0907a438",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\examples.test.js",
        "uuid": "b950b843-2849-402a-b06c-fafb0907a438",
        "failedHooks": [],
        "fullFile": "E:\\Git\\demos\\mocha\\test\\examples.test.js",
        "passes": [
          {
            "title": "Difference types test",
            "fullTitle": "Difference types test Difference types test",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// 相等或不相等\nexpect(4 + 5).to.be.equal(9);\nexpect(4 + 5).to.be.not.equal(10);\n// expect(foo).to.be.deep.equal({ bar: 'baz' });\n// 布尔值为true\nexpect('everthing').to.be.ok;\nexpect(false).to.not.be.ok;\n// typeof\nexpect('test').to.be.a('string');\nexpect({ foo: 'bar' }).to.be.an('object');\n// expect(foo).to.be.an.instanceof(Foo);\n// include\nexpect([1, 2, 3]).to.include(2);\nexpect('foobar').to.contain('foo');\nexpect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n// empty\nexpect([]).to.be.empty;\nexpect('').to.be.empty;\nexpect({}).to.be.empty;\n// match\nexpect('foobar').to.match(/^foo/);",
            "err": {},
            "isRoot": false,
            "uuid": "1af08ab0-ca0a-47aa-a476-785518911302",
            "parentUUID": "b950b843-2849-402a-b06c-fafb0907a438",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasFailedHooks": false,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 3,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "36664762-94b7-4612-ba94-0443909b05d0",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "1 plus 1 should equal to 2",
      "fullTitle": "test add 1 plus 1 should equal to 2",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(1, 1)).to.be.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "b8530a4c-23b5-47de-a474-f1268c989e27",
      "parentUUID": "2bf4fb4c-6606-4f92-9175-ec660cd69084",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Difference types test",
      "fullTitle": "Difference types test Difference types test",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// 相等或不相等\nexpect(4 + 5).to.be.equal(9);\nexpect(4 + 5).to.be.not.equal(10);\n// expect(foo).to.be.deep.equal({ bar: 'baz' });\n// 布尔值为true\nexpect('everthing').to.be.ok;\nexpect(false).to.not.be.ok;\n// typeof\nexpect('test').to.be.a('string');\nexpect({ foo: 'bar' }).to.be.an('object');\n// expect(foo).to.be.an.instanceof(Foo);\n// include\nexpect([1, 2, 3]).to.include(2);\nexpect('foobar').to.contain('foo');\nexpect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n// empty\nexpect([]).to.be.empty;\nexpect('').to.be.empty;\nexpect({}).to.be.empty;\n// match\nexpect('foobar').to.match(/^foo/);",
      "err": {},
      "isRoot": false,
      "uuid": "1af08ab0-ca0a-47aa-a476-785518911302",
      "parentUUID": "b950b843-2849-402a-b06c-fafb0907a438",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "1 plus 1 should equal to 2",
      "fullTitle": "test add 1 plus 1 should equal to 2",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(1, 1)).to.be.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "b8530a4c-23b5-47de-a474-f1268c989e27",
      "parentUUID": "2bf4fb4c-6606-4f92-9175-ec660cd69084",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Difference types test",
      "fullTitle": "Difference types test Difference types test",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// 相等或不相等\nexpect(4 + 5).to.be.equal(9);\nexpect(4 + 5).to.be.not.equal(10);\n// expect(foo).to.be.deep.equal({ bar: 'baz' });\n// 布尔值为true\nexpect('everthing').to.be.ok;\nexpect(false).to.not.be.ok;\n// typeof\nexpect('test').to.be.a('string');\nexpect({ foo: 'bar' }).to.be.an('object');\n// expect(foo).to.be.an.instanceof(Foo);\n// include\nexpect([1, 2, 3]).to.include(2);\nexpect('foobar').to.contain('foo');\nexpect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n// empty\nexpect([]).to.be.empty;\nexpect('').to.be.empty;\nexpect({}).to.be.empty;\n// match\nexpect('foobar').to.match(/^foo/);",
      "err": {},
      "isRoot": false,
      "uuid": "1af08ab0-ca0a-47aa-a476-785518911302",
      "parentUUID": "b950b843-2849-402a-b06c-fafb0907a438",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}